curve(5*x^2-3*x+1,-10,10,add=TRUE)
curve(cos,-10,10,add=TRUE)
curve(exp,-10,10)
curve(exp,-10,10)
curve(log,-10,10,add=TRUE)
curve(exp,-10,10)
curve(log,-10,10,add=TRUE)
curve(5*x^2-3*x+1,-10,10,add=TRUE)
curve(exp,-10,10)
curve(log,-10,10,add=TRUE)
curve(5*x^2-3*x+1,-10,10,add=TRUE)
curve(cos,-10,10,add=TRUE)
curve(cos,-10,10,add=TRUE)
curve(cos,-10,10)
curve(exp,-10,10)
curve(log,-10,10,add=TRUE)
curve(5*x^2-3*x+1,-10,10,add=TRUE)
curve(cos,-10,10,add=TRUE)
curve(exp,-10,10,title=(a)Exponetial)
curve(exp,-10,10,title(line = (a)Exponential))
curve(exp,-10,10,title(line = exponential))
curve(exp,-10,10)
title(line = exponetial)
curve(exp,-10,10)
title(line = exponetial)
title(line = curve(exp,-10,10))
title(line = curve(exp,-10,10))=exponetial
pre <- c(85,80,85,70,30,75,67,60,60,85,70,85,70,77,70,50,55,75,81,20);
post <- c(87,75,90,72,40,75,70,61,65,86,73,82,72,80,75,43,60,78,80,30);
dd <- post-pre;
shapiro.test(dd);
t.test(post, pre, paired=T, conf.level=0.95);
t.test(dd);
pre <- c(85,80,85,70,30,75,67,60,60,85,70,85,70,77,70,50,55,75,81,20);
post <- c(87,75,90,72,40,75,70,61,65,86,73,82,72,80,75,43,60,78,80,30);
dd <- post-pre;
dd <- post-pre;
dd <- post-pre
pre <- c(85,80,85,70,30,75,67,60,60,85,70,85,70,77,70,50,55,75,81,20);
post <- c(87,75,90,72,40,75,70,61,65,86,73,82,72,80,75,43,60,78,80,30);
dd<-post-pre;
shapiro.test(dd);
t.test(post, pre, paired=T, conf.level=0.95);
t.test(dd);
a  round(qnorm(1-0.159, 2, 1))
a;
a <- round(qnorm(1-0.159, 2, 1))
a;
a <- round(qnorm(1-0.159, 2, 1));
a;
b <- round(qnorm(pnorm(3, 2, 1)-0.683, 2, 1));
b;
b <- round(qnorm(pnorm(3, 2, 1)-0.683, 2, 1));
a<-round(qnorm(1-0.159, 2, 1));
a;
b<-round(qnorm(pnorm(3, 2, 1)-0.683, 2, 1));
b;
par(mfrow=c(2,2));
curve(exp(x), from=-10, to=10, main="(a) Exponential");
curve(log(x), from=-10, to=10, main="(b) Logarithmic");
curve(5*x^2-3*x+1, from=-10, to=10, main="(c) Quadratic");
curve(cos(x), from=-10, to=10, main="(d) Cosine");
par(mfrow=c(1,1));
par(mfrow=c(2,2));
curve(exp(x), from=-10, to=10, main="(a) Exponential");
curve(log(x), from=-10, to=10, main="(b) Logarithmic");
curve(5*x^2-3*x+1, from=-10, to=10, main="(c) Quadratic");
curve(cos(x), from=-10, to=10, main="(d) Cosine");
par(mfrow=c(1,1));
par(mfrow=c(2,2));
curve(exp(x), from=-10, to=10, main="(a) Exponential");
curve(log(x), from=-10, to=10, main="(b) Logarithmic");
curve(5*x^2-3*x+1, from=-10, to=10, main="(c) Quadratic");
curve(cos(x), from=-10, to=10, main="(d) Cosine");
IQ<-c(107,110,99,131,123,83,143,129,102,72,97,100,92, 118,103,110,90,132,110,
139,93,101,102,107,96);
IQbar<-mean(IQ);
IQsd<-14/sqrt(25);
z<-qnorm(0.995);
IQCI99<-c(IQbar-z*IQsd, IQbar+z*IQsd);
IQCI99;
data(iris); attach(iris);
SLM<-tapply(Sepal.Length, Species, mean);
SLV<-tapply(Sepal.Length, Species, var);
SWM<-tapply(Sepal.Width, Species, mean);
SWV<-tapply(Sepal.Width, Species, var);
PLM<-tapply(Petal.Length, Species, mean);
PLV<-tapply(Petal.Length, Species, var);
PWM<-tapply(Petal.Width, Species, mean);
PWV<-tapply(Petal.Width, Species, var);
MM<-rbind(SLM,SWM,PLM,PWM);
MM;
VV<-rbind(SLM,SWM,PLM,PWM);
VV;
SLN<-tapply(Sepal.Length, Species, shapiro.test); SLN;
SWN<-tapply(Sepal.Width, Species, shapiro.test); SWN;
PLN<-tapply(Petal.Length, Species, shapiro.test); PLN;
PWN<-tapply(Petal.Width, Species, shapiro.test); PWN;
boxplot(Sepal.Length ~ Species, col="yellow", ylab="Sepal Length",
main="Iris Sepal Length by Species", las=1);
data(iris)
attach(iris);
attach(iris)
attach(iris)
kruskal.test(Petal.Width ~ Species);
bartlett.test(Sepal.Length ~ Species);
pairwise.t.test(Sepal.Length, Species, pool.sd=F);
pre<-c(85,80,85,70,30,75,67,60,60,85,70,85,70,77,70,50,55,75,81,20);
post<-c(87,75,90,72,40,75,70,61,65,86,73,82,72,80,75,43,60,78,80,30);
shapiro.test(pre);
shapiro.test(post);
wilcox.test(pre, post, paired=T, conf.int=T, exact=F, correct=F);
Reg1<-lm(Volume ~ Girth);
summary(Reg1);
data("trees"); attach(trees);
cor(trees);
Reg1<-lm(Volume ~ Girth);
summary(Reg1);
plot(Reg1)
Reg2<-lm(log(Volume)~log(Girth));
summary(Reg2);
plot(Reg2);
source('C:/Users/User/Desktop/ECO/R/期末模擬考.R')
source('C:/Users/User/Desktop/ECO/R/期末模擬考.R')
dbinom(0:6, 6, 0.5);
toss6a<-replicate(1000, sum(sample(c("H","T"), 6, rep=T, p=c(0.5,0.5)) == "H"));
a<-table(toss6a);
a/1000;
binom(0:6, 6, 0.7);
toss6b<-replicate(1000, sum(sample(c("H","T"), 6, rep=T, p=c(0.7,0.3)) == "H"));
b<-table(toss6b);
b/1000;
m<-rbind(a,b);
m;
chisq.test(m);
bpt<-matrix(0, nr=11,nc=9);
for(i in 1:11){
for(j in 1:9){
bpt[i,j] <- round(dbinom((i-1),10,j/10),4)
}
};
rownames(bpt)<-paste("x=", (1:11)-1,sep="");
colnames(bpt)<-paste("p=", (1:9)/10,sep="");
bpt;
paste("Prob(2<X<6) = Prob(-2/3<X<2/3) =",
round((pnorm(2/3)-pnorm(-2/3)),4));
paste("Prob(|X|>2) = Prob(X>2)+Prob(X<-2) = Prob(X>-2/3)+Prob(X<-2) =",
round((1-pnorm(-2/3)+pnorm(-2)),4));
integrate(function(x) 0.5*(x^2+4),0,1);
integrate(function(x) 0.5*x^0,2,4);
integrate(function(x) x/4,1,3);
integrate(function(x)0.5*(x^2+4),0,1);
integrate(function(x)0.5*x^0,2,4);
integrate(function(x)x/4,1,3);
install.packages("distrEx"); library(distrEx);
x<-Binom(20, 0.7); E(x); var(x); skewness(x); kurtosis(x);
y<-Norm(4, 3); E(y); var(y); skewness(y); kurtosis(y);
z<-Exp(5); E(z); var(z); skewness(z); kurtosis(z);
install.packages("distrEx"); library(distrEx);
x<-Binom(20, 0.7); E(x); var(x); skewness(x); kurtosis(x);
y<-Norm(4, 3); E(y); var(y); skewness(y); kurtosis(y);
z<-Exp(5); E(z); var(z); skewness(z); kurtosis(z);
install.packages("distrEx")
integrate(function(x)0.5*(x^2+4),0,1);
integrate(function(x)0.5*x^0,2,4);
integrate(function(x)x/4,1,3);
data("LakeHuron"); hist(LakeHuron);
qqnorm(LakeHuron); qqline(LakeHuron);
shapiro.test(LakeHuron);
t.test(LakeHuron, mu=578);
qqline(LakeHuron);
qqnorm(LakeHuron);
integrate(function(x)0.5*(x^2+4),0,1);
integrate(function(x)0.5*x^0,2,4);
integrate(function(x)x/4,1,3);
shapiro.test(LakeHuron);
t.test(LakeHuron, mu=578);
data("Nile"); hist(Nile);
qqnorm(Nile)
qqline(Nile)
shapiro.test(Nile);
binom.test(sum(Nile>850), length(Nile)); wilcox.test(Nile,mu=850);
install.packages("ISwR"); library(ISwR);
data(zelazo); attach(zelazo);
walk<-unlist(zelazo); walk;
group<-factor(rep(1:4, c(6,6,6,5)), labels=names(zelazo));
ANOVA<-aov(walk ~ group); summary(ANOVA);
ANOVA2<-lm(walk ~ group); summary(ANOVA2);
plot(Dif, las=1);
Dif<-TukeyHSD(ANOVA); Dif;
plot(Dif, las=1);
curve(df(x, 2, 50), from=0, to=10)
curve(dnorm(x), from=-4, to=4)
curve(dlnorm(x), from=0, to=5)
boxplot(Sepal.Length ~ Species, col="yellow", ylab="Sepal Length",
main="Iris Sepal Length by Species", las=1);
data(iris); attach(iris);
SLM<-tapply(Sepal.Length, Species, mean);
SLV<-tapply(Sepal.Length, Species, var);
SWM<-tapply(Sepal.Width, Species, mean);
SWV<-tapply(Sepal.Width, Species, var);
PLM<-tapply(Petal.Length, Species, mean);
PLV<-tapply(Petal.Length, Species, var);
PWM<-tapply(Petal.Width, Species, mean);
PWV<-tapply(Petal.Width, Species, var);
MM<-rbind(SLM,SWM,PLM,PWM);
MM;
VV<-rbind(SLM,SWM,PLM,PWM);
VV;
#(b)
SLN<-tapply(Sepal.Length, Species, shapiro.test); SLN;
SWN<-tapply(Sepal.Width, Species, shapiro.test); SWN;
PLN<-tapply(Petal.Length, Species, shapiro.test); PLN;
PWN<-tapply(Petal.Width, Species, shapiro.test); PWN;
#(c)
boxplot(Sepal.Length ~ Species, col="yellow", ylab="Sepal Length",
main="Iris Sepal Length by Species", las=1);
data(iris)
attach(iris);
data("Nile")
shapiro.test(Nile);
bartlett.test(Sepal.Length ~ Species);
pairwise.t.test(Sepal.Length, Species, pool.sd=F);
hist(LakeHuron);
qqnorm(LakeHuron);
qqline(LakeHuron);
shapiro.test(LakeHuron);
t.test(LakeHuron, mu=578);
num1<-1
num2<-100
num1+num2
aVector<-c(5,6,7)
a2Vector<-c(5L,6L,7L)
num1<-1
num2<-100
num1+num2
num1<-1.568
num2<-2.121
round(num1,digits = 2)
aVector<-c(5,6,7)
a2Vector<-c(5L,6L,7L)
num1<-1
num2<-100
num1+num2
?class
x <- 10
class(x) # "numeric"
oldClass(x) # NULL
inherits(x, "a") #FALSE
class(x) <- c("a", "b")
inherits(x,"a") #TRUE
inherits(x, "a", TRUE) # 1
inherits(x, c("a", "b", "c"), TRUE) # 1 2 0
round(2.3875)
round(2.3875,digit=2)
library(readr)
install.packages("readr")
library("readr", lib.loc="~/R/win-library/3.4")
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200))
detach("package:readr", unload=TRUE)
install.packages("curl")
library("curl", lib.loc="~/R/win-library/3.4")
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200))
detach("package:curl", unload=TRUE)
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
View(student)
View(student)
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
student(出生地)
student:出生地
View(student)
View(student)
as.factor(student$出生地) -> student$出生地
as.factor(student$出生地) -> student$出生地
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))
View(student)
table(student$`出生地‵)
table(student$出生地)
levels(student$出生地)
factor(student$身高級距,
levels=c("(0,150]","(150,155]", "(155,160]", "(160,165]" ,"(165,170]", "(170,175]" ,"(175,180]" ,"(180,185]", "(185,200]"),
ordered=TRUE) -> student$身高級距
b<-"你好"
bVector<-c("你好","How are you?")
library(readr)
student <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/student.csv")
library(dplyr)
library(magrittr)
student %<>% mutate(
身高級距=cut(身高,c(0,150,155,160,165,170,175,180,185,200)))))
library(dplyr)
library(lubridate)
install.packages("lubridate")
library(dplyr)
library(lubridate)
a <- ymd("2017-01-31")
b <- ymd_hms("2017-01-31 20:11:59")
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
library(lubridate)
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
b <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="quarter")
c <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="year")
library("lubridate", lib.loc="~/R/win-library/3.4")
library(lubridate)
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
b <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="quarter")
c <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="year")
library(lubridate)
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
b <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="quarter")
c <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="year")
library(lubridate)
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
b <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="quarter")
c <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="year")
hw <- "Hadley Wickham"
library(stringr)
str_sub(hw, 1, 6)
str_sub(hw, end = 6)
str_sub(hw, 8, 14)
str_sub(hw, 8)
str_sub(hw, c(1, 8), c(6, 14))
library(lubridate) #加了r才不會辨別成字串，而是辨別是日期
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
b <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="quarter")
c <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="year")
library(lubridate)
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
b <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="quarter")
c <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="year")
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
View(studentID)
library(lubridate)
#加了r才不會辨別成字串，而是辨別是日期
a <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="month")
b <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="quarter")
c <- seq(ymd("2001-01-01"),ymd("2018-09-01"),by="year")
hw <- "Hadley Wickham"
library(stringr)
str_sub(hw, 1, 6)
str_sub(hw, end = 6)
str_sub(hw, 8, 14)
str_sub(hw, 8)
str_sub(hw, c(1, 8), c(6, 14))
library(r)
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
str_sub(studentID, 4, 4)
View(studentID)
View(studentID)
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
str_sub(studentID$學號, 5, 6)
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
str_sub(studentID$學號, 5, 6) -> aa
table(aa)
library(readr)
studentID <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/studentID.csv")
str_sub(studentID$學號, 5, 6) -> aa
table(aa)
str_c(letters,LETTERS)
str_c(letters,LETTERS,sep="-")
str_c("lowercase: ", letters, ", capital: ", LETTERS)
letters
LETTERS
letters #小寫英文字母
LETTERS #大寫英文字母
library(readr)
githubData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/githubData.csv")
View(githubData)
githubData[c(2,3,4),] -> sampleGithub
str_c(sampleGithub$`GitHub username`,
sampleGithub$`GitHub repo name`)
str_c("https://github.com/",
sampleGithub$`GitHub username`,
"/",
sampleGithub$`GitHub repo name`)
studentID$學號
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
View(filmVotingData)
str_split_fixed(fruits, " and ", 3)
fruits <- c(
"apples and oranges and pears and bananas",
"pineapples and mangos and guavas"
)
str_split_fixed(fruits, " and ", 3)
str_split_fixed(fruits, " and ", 4)
View(filmVotingData)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, ",", 2)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, ",", 2)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, ",", 3)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, ",", 3) ->bb
dim(bb)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, ",", 3) -> bb
dim(bb)
cc <- c(bb)
cc
table(cc)
民國年月<-c("099/01","099/02","099/03")
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, ",", 3) -> splitResult
str_c(splitResult) -> arrayResult
hhead(arrayResult)
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, ", ", 3) -> splitResult
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,",", 3) -> splitResult
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, " , " , 3) -> splitResult
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部," ," , 3) -> splitResult
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, " ," , 3) -> splitResult
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, " ,", 3) -> splitResult
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
library(stringr)
str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部, "," , 3) -> splitResult
str_c(splitResult) -> arrayResult
head(arrayResult)
table(arrayResult)
install.packages("googlesheets")
gs_auth(new_user = TRUE)
install.packages("gs_")
install.packages("gs_auth")
library(googlesheets)
gs_auth(new_user = TRUE)
gs_auth(new_user = TRUE)
install.packages("googlesheets")
library(googlesheets)
gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")  #download sheet information as an object
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
gs_auth(new_user = TRUE)
library(googlesheets)
gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
View(gsSurvey)
View(githubData)
View(sampleGithub)
library(googlesheets)
library(googlesheets)
gs_auth(new_user = TRUE)
4/ewDmB2Dj1ouh8jZeGJlC1iQf27UFfYnE_iT9sFDR01bLR_Msxyq_OUM
'4/ewDmB2Dj1ouh8jZeGJlC1iQf27UFfYnE_iT9sFDR01bLR_Msxyq_OUM'
gs_auth(new_user = TRUE)
'4/ewC7lJ93MEnO1fYVrij6cu2ZONnnnZtTlM-o_PVc3EmTONuFLd50H_4'
gs_auth(new_user = TRUE)
gs_auth(new_user = TRUE)
gsSurvey<-gs_key("1mC9bnxj11NCNoOCw0Vmn4nxERbHtLjeGo9v9C9b2GDE")
classSurvey<-gs_read(gsSurvey,ws=1) #access the 1st worksheet
View(classSurvey)
